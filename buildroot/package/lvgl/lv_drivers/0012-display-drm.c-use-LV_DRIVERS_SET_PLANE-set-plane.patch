From 0fea0a75b5d497577c4b5e47e83d5fe17219a9ff Mon Sep 17 00:00:00 2001
From: ZiHan Huang <zack.huang@rock-chips.com>
Date: Tue, 1 Aug 2023 15:05:03 +0800
Subject: [PATCH] display/drm.c: use LV_DRIVERS_SET_PLANE set plane example:
 export LV_DRIVERS_SET_PLANE=CURSOR

Signed-off-by: ZiHan Huang <zack.huang@rock-chips.com>
---
 display/drm.c | 64 +++++++++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 59 insertions(+), 5 deletions(-)

diff --git a/display/drm.c b/display/drm.c
index 943b1e7..15c7569 100644
--- a/display/drm.c
+++ b/display/drm.c
@@ -467,21 +467,75 @@ drm_plane_is_overlay(struct device *dev, int plane_id)
     return type == DRM_PLANE_TYPE_OVERLAY;
 }
 
+int
+drm_plane_is_cursor(struct device *dev, int plane_id)
+{
+    drmModeObjectPropertiesPtr props;
+    drmModePropertyPtr prop;
+    unsigned int i;
+    int type = 0;
+
+    props = drmModeObjectGetProperties(dev->fd, plane_id,
+                                       DRM_MODE_OBJECT_PLANE);
+    if (!props)
+        return 0;
+
+    for (i = 0; i < props->count_props; i++) {
+        prop = drmModeGetProperty(dev->fd, props->props[i]);
+        if (prop && !strcmp(prop->name, "type"))
+            type = props->prop_values[i];
+        drmModeFreeProperty(prop);
+    }
+    DRM_DEBUG("Plane: %d, type: %d\n", plane_id, type);
+
+    drmModeFreeObjectProperties(props);
+    return type == DRM_PLANE_TYPE_CURSOR;
+}
+	
 static drmModePlanePtr
 drm_get_plane(struct device *dev, int plane_id, int pipe)
 {
     drmModePlanePtr plane;
-
+	char* set_plane;
     plane = drmModeGetPlane(dev->fd, plane_id);
     if (!plane)
         return NULL;
 
     DRM_DEBUG("Check plane: %d, possible_crtcs: %x\n", plane_id,
               plane->possible_crtcs);
-    if (drm_plane_is_primary(dev, plane_id)) {
-        if (plane->possible_crtcs & (1 << pipe))
-            return plane;
-    }
+    set_plane = getenv("LV_DRIVERS_SET_PLANE");
+	if(set_plane == NULL) {
+        printf("LV_DRIVERS_SET_PLANE not be set, use DRM_PLANE_TYPE_PRIMARY\n");                                 
+        if (drm_plane_is_primary(dev, plane_id)) {
+            if (plane->possible_crtcs & (1 << pipe))
+                return plane;
+        }
+	}
+	if (!strcmp("OVERLAY", set_plane)) {
+		printf("LV_DRIVERS_SET_PLANE = DRM_PLANE_TYPE_OVERLAY\n");
+		if (drm_plane_is_overlay(dev, plane_id)) {
+			if (plane->possible_crtcs & (1 << pipe))
+				return plane;
+		}
+	}else if (!strcmp("PRIMARY", set_plane)) {
+		printf("LV_DRIVERS_SET_PLANE = DRM_PLANE_TYPE_PRIMARY\n");
+        if (drm_plane_is_primary(dev, plane_id)) {
+            if (plane->possible_crtcs & (1 << pipe))
+                return plane;
+		}
+	}else if (!strcmp("CURSOR", set_plane)) {
+        printf("LV_DRIVERS_SET_PLANE = DRM_PLANE_TYPE_CURSOR\n");
+		if (drm_plane_is_cursor(dev, plane_id)) {
+            if (plane->possible_crtcs & (1 << pipe))
+                return plane;
+		}
+	}else {
+		printf("LV_DRIVERS_SET_PLANE set err, use DRM_PLANE_TYPE_PRIMARY\n");
+        if (drm_plane_is_primary(dev, plane_id)) {
+            if (plane->possible_crtcs & (1 << pipe))
+                return plane;
+		}
+	}
 
     drmModeFreePlane(plane);
     return NULL;
-- 
2.17.1

